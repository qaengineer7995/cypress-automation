/// <reference types="Cypress"/>
import 'cypress-iframe'
import HomePOM from '../pageObjects/HomePOM'
describe('Test Suite for Page Object Model Demo', function()
{
    //creating the object of the pom class
    const homepom = new HomePOM()
this.beforeAll(function(){
    //write something here so that it will execute before all the test cases
})
 
this.beforeEach(function(){
    cy.fixture('Testdata').then((data)=> {
        this.testdata=data
    })
})

this.afterAll(function(){
//write something here so that it will execute after all the test cases
})

this.afterEach(function(){

//write something here so that it will execute after each test cases got executed
})

    //To Handle Uncaught Exception
    Cypress.on('uncaught:exception',(err,runnable) => {
    return false;
    })

//Test Case
    it('First Test Case',function(){
    homepom.getApplicationURL()
    //Example for implicitly wait {timeout:15000 -> Miliseconds -> 1sec =1000 milliseconds}
    homepom.getSearchBox().type('iphone{enter}')
    //cy.get('#twotabsearchtextbox',{timeout:15000}).type('iphone{enter}')
    //we can stop the execution and click on inspector icon
    //then once we hover on an element we can see the autogenerated code like this 
    //we can click on copy to clipboard icon to copy this 
    homepom.getBestSellerMenuLink().click({force:true})
   // cy.get('[href="/gp/bestsellers/?ref_=nav_cs_bestsellers"]').click({force:true})
    //{force:true} to click some elements overlaping with the other elements 
    //cy.wait(10000)
    cy.get("a[href='/deals?ref_=nav_cs_gb']", {timeout:5000}).then(function(text){
        const elementText=text.text()
        cy.log(elementText)
        expect(elementText).equals(this.testdata.expectedText)
       
     })
    })
// To Execute multiple test suites and test cases at once we need to use below command
// npx cypress run   -> headless mode 
// npx cypress run --headed   -> headed mode will open the browser and starts the execution

it('Second Test Case - Mouse Hover Demo',function(){
    homepom.getApplicationURL()
    cy.wait(1000)
    //code to hover on  an element 
    homepom.getAccountLink().eq(0).trigger('mouseover')
    cy.wait(9000)
   
    })


it('3rd Test Case - to check an element is visible  ',function(){
    homepom.getApplicationURL()
    cy.wait(1000)
    //code to check an element is visible 
    homepom.getAccountLink().should('be.visible')
    cy.wait(9000)
})

it('4th Test Case - to check an element text is visible  ',function(){
    homepom.getApplicationURL()
    cy.wait(1000)
    homepom.getBestSellerMenuLink().click({force:true})
    cy.wait(5000)
     //code to check an element text is visible 
    homepom.getBestSellerSearchHeader().should('have.text','Amazon Bestsellers')
})
//Use .only to execute only particular test case from that test suite
it('5th Test Case - How to handle multiple elements',function(){
    homepom.getApplicationURL()
    cy.wait(1000)
    homepom.getBestSellerMenuLink().click({force:true})
    cy.wait(5000)
    homepom.getBestSellerSearchHeader().should('have.text','Amazon Bestsellers')
    //code to click on the first element
    // homepom.getListOfProducts().eq(0).click()
   //code to click on the Second element
    homepom.getListOfProducts().eq(1).click()
   //to avoid error we can use multiple:true inside click  {multiple:true}
    homepom.getListOfProducts().click()
     
})

it('6th Test Case - How to Handle Frames',function(){
cy.iframe('#endregion').find('#firstname').type('firstname')
})

it('7th Test Case - How to Handle Alerts',function(){
    cy.on('window:alert',(alert) => {
     expect(alert).to.contains('Our alert text')
    })
})


it.only('8th Test Case - How to Handle Random Data',function(){
   var RandomData=homepom.getUserInfo()
   cy.log("FirstName-"+RandomData[0])
   cy.log("lastname-"+RandomData[1])
   cy.log("phonenumber-"+RandomData[2])
   cy.log("email-"+RandomData[3])
   cy.log("addressline1-"+RandomData[4])
   cy.log("zipcode-"+RandomData[5])
   cy.log("city-"+RandomData[6])
   cy.log("Leadenquirydata-"+RandomData[7])
   cy.log("childrenfirstname-"+RandomData[8])
   cy.log("childrenlastname-"+RandomData[9])
   cy.log("childrenDOB-"+RandomData[10])
    })
})

    
